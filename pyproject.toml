[project]
name = "observatorio-ipa"
version = "0.3.1"
description = "Image Processing Automation for Observatorio Satelital de nieves (OSN)"

authors = [
    { "name" = "Erick Linares", "email" = "erick.linares@gmail.com" },
    { name = "Laboratorio TeleAmb UPLA" },
]
maintainers = []
readme = "README.md"
requires-python = ">=3.12,<4.0"
dependencies = [
    "psycopg[binary]>=3.2.1,<4.0.0",
    "pydantic>=2.11,<3.0",
    "pydantic-settings>=2.9.0,<3.0.0",
    "email-validator (>=2.2.0,<3.0)",
    "python-dateutil (>=2.9.0.post0,<3.0)",
    "pytz>=2025.2",
    "sqlalchemy>=2.0.43,<3.0.0",
]
# license = "Proprietary"
# license = "GPL-3.0-only"
# license-files = ["LICENSE"]
keywords = [
    "automation",
    "Google Earth Engine",
    "export",
    "image",
    "MODIS",
    "image processing",
    "satellite imagery",
    "snow monitoring",
]
classifiers = [
    "Programming Language :: Python :: 3",
    #    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]

[tool.webapp]
version = "0.2.0"

[project.urls]
homepage = "https://github.com/TeleAmb-upla/nieves_auto"
repository = "https://github.com/TeleAmb-upla/nieves_auto"

[project.scripts]
#observatorio-ipa = "observatorio_ipa.__main__:main"

[dependency-groups]
dev = [
    "jupyter >=1.1.1,<2.0.0",
    "myst-nb >=1.2.0,<2.0.0",
    "sphinx >=8.2.3,<9.0.0",
    "sphinx-autoapi >=3.6.0,<4.0.0",
    "sphinx-rtd-theme >=3.0.2,<4.0.0",
    "pytest >=8.3.5,<9.0.0",
    "pytest-cover >=3.0.0,<4.0.0",
    "pytest-mock >=3.14.0,<4.0.0",
    #"pytest-gee >=0.8.0,<1.0.0",
    "python-dotenv >=1.1.0,<2.0.0",
    "logging-tree >=1.10,<2.0",
    "python-semantic-release >=9.21.1,<10.0.0",
    "geemap>=0.36.0,<1.0.0",
    "black>=25.1.0",
]

[project.optional-dependencies]
ipa = [
    "apscheduler>=3.11.0,<4.0.0",
    "arrow>=1.3.0,<2.0.0",
    "cryptography>=45.0,<46.0",
    "earthengine-api>=1.4.1,<2.0",
    "gee-toolbox (==0.2.*)",
    "gitpython>=3.1,<4.0",
    "jinja2>=3.1,<4.0",
    "prettytable>=3.16.0,<4.0.0",
    "pygithub>=2.7,<3.0",
    "pyjwt>=2.10,<3.0",
]

web = [
    "crispy-bootstrap5>=2025.6",
    "django>=5.2,<6.0",
    "django-allauth>=65.11.2",
    "django-crispy-forms>=2.4",
    "django-debug-toolbar>=6.0.0",
    "django-filter>=25.1",
    "django-tables2>=2.7.5",
    "gunicorn>=23.0.0",
    "whitenoise[brotli]>=6.10.0",
]

[tool.uv]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.pytest.ini_options]
# pythonpath = ["src"]
pythonpath = ["."] # This might be wrong
addopts = ["--import-mode=importlib"]
testpaths = ["tests"]
filterwarnings = [
    "ignore::DeprecationWarning:pkg_resources.*",
    "ignore::DeprecationWarning:ee_extra.*",
]

[tool.semantic_release]
version_toml = ["pyproject.toml:project.version"]
major_on_zero = false
tag_format = "v{version}"

[tool.semantic_release.branches.main]
match = "(main|master)"
prerelease_token = "rc"
prerelease = true

[tool.semantic_release.changelog]
mode = "update"

[tool.semantic_release.changelog.default_templates]
changelog_file = "CHANGELOG.md"
mask_initial_release = false

[tool.semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "semantic-release <semantic-release>"

[tool.semantic_release.remote]
name = "origin"
type = "github"
ignore_token_for_push = true

[tool.semantic_release.publish]
upload_to_vcs_release = false
